    /**
     * Retrieve a list containing gcda paths from a binary file
     * @return
     * @throws InterruptedException
     */
    public List<String> getGCDALocations() throws InterruptedException {
        IBinaryObject binaryObject = STSymbolManager.sharedInstance.getBinaryObject(new Path(binaryPath));
        String binaryPath = binaryObject.getPath().toOSString();
        STStrings strings = STSymbolManager.sharedInstance.getStrings(binaryObject, project);
        List<String> l = new LinkedList<>();
        Process p = getStringsProcess(strings.getName(), strings.getArgs(), binaryPath);
        if (p == null) {
			if (Platform.getOS().equals(Platform.OS_WIN32)) {
				Display.getDefault().syncExec(() -> {
					MessageDialog.openError(new Shell(), Messages.CovManager_Retrieval_Error_title,
							Messages.CovManager_No_Strings_Windows_Error);
				});
			} else {
				Status status = new Status(IStatus.ERROR, Constants.PLUGIN_ID, IStatus.ERROR,
						Messages.CovManager_Retrieval_Error, new IOException());
				Platform.getLog(FrameworkUtil.getBundle(CovManager.class)).log(status);
			}
            return l;
        }
        ThreadConsumer t = new ThreadConsumer(p, l);
        t.start();
        p.waitFor();
        t.join();
        return l;
    }

